{"data":{"site":{"siteMetadata":{"title":"FENews"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"几周之前，我在推特上发了这个面试题: *  **在开始之前，先在你脑海中回答这个问题   * ** 推特上大约一半的回答都是错误的。答案并不是 V8（或者虚拟机）！！虽然“JavaScript计时器” 很出名，但是   和   函数并不是 ECMAScript…","fields":{"slug":"/2019-03-05---javascript-timers-everything-you-need-to-know/"},"frontmatter":{"date":"2019年03月25日","title":"关于JavaScript timer你需要了解的知识","description":"关于JavaScript计时器你需要知道的全部知识"}}},{"node":{"excerpt":"React Hooks 是一个闪亮的新 提案 ，将优化 90% 的 React 代码。 根据  Dan Abramov  的说法， Hooks  是 React 的未来。 这听起来不错，但什么是 Hooks，它们将如何帮助我编写更好的代码？ 很高兴你这么问。 Hooks…","fields":{"slug":"/2019-03-03---how-to-get-started-with-react-hooks-controlled-forms/"},"frontmatter":{"date":"2019年03月08日","title":"如何在受控表单组件上使用 React Hooks","description":""}}},{"node":{"excerpt":"在我之前的一篇  文章  中，讨论了在 JavaScript…","fields":{"slug":"/2019-02-27---computer-science-in-javascript-doubly-linked-lists/"},"frontmatter":{"date":"2019年02月27日","title":"JavaScript 中的计算机科学：双向链表","description":"在 Javascript 中实现双向链表。"}}},{"node":{"excerpt":"JavaScript 的异步处理一直被认为不够快。更糟糕的是，调试实时的 JavaScript 应用程序，特别是 Node.js 服务器，并非易事，特别是涉及到异步编程时。幸运的是，这个现象正在被改变。这篇文章将介绍我们是如何在 V8 （有一些其他的 JavaScript…","fields":{"slug":"/2019-02-24--faster-async-functions-and-promises/"},"frontmatter":{"date":"2019年02月27日","title":"异步（async）函数和 promise 性能优化","description":"JavaScript 的异步处理一直被认为不够快。更糟糕的是，调试实时的 JavaScript 应用程序，特别是 Node.js 服务器，并非易事，特别是涉及到异步编程时。幸运的是，这个现象正在被改变。这篇文章将介绍我们是如何在 V8 （有一些其他的 JavaScript 引擎也一样） 中优化异步函数和 promise 的，还有我们如何提升异步代码的调试体验。"}}},{"node":{"excerpt":"当你在组件里调用了   , 你觉得接下来会发生什么？ React 根据 state 改变后的   状态来更新 DOM 然后返回  。 看起来很简单，是吧。但是，到底是 React 去做了逻辑还是 React DOM ? 更新 DOM 结节听起来像是 React DOM…","fields":{"slug":"/2019-02-26---how-does-setstate-know-what-to-do/"},"frontmatter":{"date":"2019年02月26日","title":"setState如何知道该做什么？","description":"setState如何知道该做什么？"}}},{"node":{"excerpt":"浏览器如何调度和执行脚本影响着 web 页面的的性能。 、  等技术影响着脚本的加载，知道浏览器如何解释它们，对优化 web 性能很有帮助。感谢  Kouhei Ueno ，我们已经更新了 Chrome…","fields":{"slug":"/2019-02-22--chrome-js-loading-priorities/"},"frontmatter":{"date":"2019年02月23日","title":"Chrome 中 JavaScript 加载优先级","description":"知道浏览器如何调度和执行脚对 web 性能的优化有着很大的帮助。"}}},{"node":{"excerpt":"Flutter  是一款跨平台的移动应用 SDK，可通过同一套代码构建高性能，高保真的 iOS 和 Android 应用。 文档中提到 (https://flutter.io/technical-overview/): Flutter 包括一个  react…","fields":{"slug":"/2019-02-22---Flutter-for-JavaScript-Developers/"},"frontmatter":{"date":"2019年02月22日","title":"「译」为 JavaScript 开发者准备的 Flutter 指南","description":"Flutter 是一款跨平台的移动应用 SDK，可通过同一套代码构建高性能，高保真的 iOS 和 Android 应用。"}}},{"node":{"excerpt":"\n这可能是一台非常古老的状态机。  拍摄  当我看到有人在 Twitter 上发布他们带有激情的项目时，我心里有点嫉妒他们。 ✨ \n这些项目通常都包含很多花俏的技术，GraphQL…","fields":{"slug":"/2019-02-10---Handling-data-fetching-with-state-machines/"},"frontmatter":{"date":"2019年02月20日","title":"「译」使用状态机管理获取的数据","description":"使用状态机管理获取的数据"}}},{"node":{"excerpt":"每6个星期创建一个新的分支作为 V8  发布过程 的一部分。每个版本都是在 Chrome Beta 里程碑之前基于v8的 git master 分支。2月7日发布了新版本— v7.3 ，该版本在几周内与 Chrome 73 Stable 协同发布之前一直处于测试阶段。V8的v…","fields":{"slug":"/2019-02-16---V8-release-v7.3/"},"frontmatter":{"date":"2019年02月16日","title":"「译」V8 release v7.3","description":"每6个星期创建一个新的分支作为 V8 发布过程的一部分。每个版本都是在 Chrome Beta 里程碑之前基于 v8 的 git master 分支。2月7日发布了新版本--v7.3，该版本在几周内与 Chrome 73 Stable 协同发布之前一直处于测试阶段。V8的v7.3充满了各种面向开发人员的好东西。这篇文章提供了一些亮点的预览"}}},{"node":{"excerpt":"现如今最常讨论的技术之一便是 API，但是很多人并不知道什么是 API，简单的来说，API 代表应用程序编程接口（Application Programming Interface）。顾名思义，就是为开发者、用户、消费者提供数据交互的接口。 你可以将 API…","fields":{"slug":"/2019-02-12---a-beginner-guide-to-graphQL/"},"frontmatter":{"date":"2019年02月14日","title":"「译」GraphQL入门指南","description":"GraphQL是Facebook开发的一种开源查询语言。它为我们提供了一种更有效的方法来设计、创建和使用我们的API，可以说它是REST的替代品"}}},{"node":{"excerpt":"关于我们 wow，猪年到了耶！首先祝大家春节快乐、猪年大吉（手动笔芯 ❤️）！从 2019 年 1 月 19 日 FENews 的第一条微信公众号消息的发出到 1 月 2…","fields":{"slug":"/2019-02-02---FENews-in-2019/"},"frontmatter":{"date":"2019年02月04日","title":"关于 FENews 在 2019 的规划","description":"FENews 成立的初衷是一起学习交流，并把我们的学习过程和经验分享给大家。我们会定期原创或翻译前端相关的技术文章，未来我们可能由于自己理解的原因或者什么其他原因而犯错，希望大家能够纠正我们。如果你对我们感兴趣或想加入我们欢迎随时联系。"}}},{"node":{"excerpt":"我们都知道 for 循环比 forEach 或者 JavaScript 函数都要快，因为在 js 函数里面可能会使用 for 循环或者其他我不确定的东西。 我用一个对象数组做了一个简单的测试，并通过 for 循环 / forEach / JavaScript…","fields":{"slug":"/2019-01-31---javascript-performance-test/"},"frontmatter":{"date":"2019年01月31日","title":"「译」JavaScript 性能测试- 比较 for/ forEach/ map/ reduce/ filter/ find","description":"我们都知道 for 循环比 forEach 或者 JavaScript 函数 map / reduce / filter / find 都要快，因为for没有任何额外的函数调用栈和上下文。"}}},{"node":{"excerpt":"自从  React Hooks  发布 alpha 版本以来, 就有很多人开始讨论一些问题，比如: “为什么有些 API 不是一个 Hook?”。 比如下面这些就是一些 Hooks API：  可以用来声明   变量。  可以用来声明  。  可以用来读取  。 但是有些 API…","fields":{"slug":"/2019-01-30---why-x-is-not-a-hook/"},"frontmatter":{"date":"2019年01月30日","title":"「译」为什么 'XX' 不是一个 Hooks API?","description":"我们可以这样做，但并不是意味着我们应该这样做。"}}},{"node":{"excerpt":" 相比起阅读这一篇文章你更加喜欢观看本次演讲的话，那么请直接观看下面的视频；如果你更喜欢阅读，请直接跳过视频。 本文内容根据原作者的演讲有部分增加和调整。 过去这些年 V…","fields":{"slug":"/2019-01-24---the-Orinoco-garbage-collector/"},"frontmatter":{"date":"2019年01月24日","title":"「译」Orinoco: V8的垃圾回收器","description":"过去这些年 V8 的垃圾回收器发生了很多的变化，从一个 `stop-the-world` 垃圾回收器变成了一个更加并行，并发和增量的垃圾回收器。"}}}]}},"pageContext":{}}