{"data":{"site":{"siteMetadata":{"title":"FENews"}},"markdownRemark":{"id":"102a5617-6b18-599a-9e25-ac47de5f094c","excerpt":"每6个星期创建一个新的分支作为 V8  发布过程 的一部分。每个版本都是在 Chrome Beta 里程碑之前基于v8的 git master 分支。2月7日发布了新版本— v7.3 ，该版本在几周内与 Chrome 73 Stable 协同发布之前一直处于测试阶段。V8的v7.…","html":"<p>每6个星期创建一个新的分支作为 V8 <a href=\"https://v8.dev/docs/release-process\">发布过程</a>的一部分。每个版本都是在 Chrome Beta 里程碑之前基于v8的 git master 分支。2月7日发布了新版本—<a href=\"https://chromium.googlesource.com/v8/v8.git/+log/branch-heads/7.3\">v7.3</a>，该版本在几周内与 Chrome 73 Stable 协同发布之前一直处于测试阶段。V8的v7.3充满了各种面向开发人员的好东西。这篇文章提供了一些亮点的预览。</p>\n<h3>异步堆栈跟踪(Async stack traces)</h3>\n<p>我们默认启用 <a href=\"https://v8.dev/blog/fast-async#improved-developer-experience\"><code class=\"language-text\">--async-stack-traces</code></a> 。零成本的异步堆栈跟踪使得在异步代码很多的生产环境诊断问题变得更容易。因为通常会发送日志文件/服务的 <code class=\"language-text\">error.stack</code> 属性现在可以更深入地了解导致问题的原因。</p>\n<h3>更快的await（Faster await）</h3>\n<p>与上述 <code class=\"language-text\">--async-stack-traces</code> 相关，我们还默认启用 <code class=\"language-text\">--harmony-await-optimization</code> ，这是 <code class=\"language-text\">--async-stack-traces</code> 的先决条件。可以查看文章 <a href=\"https://v8.dev/blog/fast-async#await-under-the-hood\">faster async functions and promises</a> 了解更多细节。</p>\n<h3>Wasm启动启动速度优化（Faster Wasm startup）</h3>\n<p>通过对 Liftoff 内部的优化，我们显着提高了 WebAssembly 的编译速度，而不会降低生成代码的质量。 对于大多数工作负载，编译时间减少了15-25％。\n<img src=\"/liftoff-epic-605ee001812fa800b7927559fa507f4d.svg\" alt=\"终端运行结果\"></p>\n<blockquote>\n<p><a href=\"https://s3.amazonaws.com/mozilla-games/ZenGarden/EpicZenGarden.html\">Epic ZenGarden的demo</a> 中 Liftoff 编译时间</p>\n</blockquote>\n<h3>JS特性</h3>\n<p>V8 v7.3带来几个新的JS特性</p>\n<h4><code class=\"language-text\">Object.fromEntries</code></h4>\n<p><code class=\"language-text\">Object.entries</code> API并不新鲜：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> entries <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → [['x', 42], ['y', 50]]</span></code></pre></div>\n<p>不幸的是，却没有简单的方法从 <code class=\"language-text\">entries</code> 的结果得到原对象…\n直到现在。</p>\n<p>V8 v7.3支持 <code class=\"language-text\">Object.fromEntries()</code>，它是内置的API，可执行 <code class=\"language-text\">Object.entries</code> 的反向操作：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">fromEntries</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → { x: 42, y: 50 }</span></code></pre></div>\n<p>JS中有了 <code class=\"language-text\">Object.entries</code> 和 <code class=\"language-text\">Object.fromEntries</code> 后，对 Maps 和原始对象中进行转换变得更容易。</p>\n<h4>String.prototype.matchAll</h4>\n<p>正则中 <code class=\"language-text\">g</code> 修饰符和 <code class=\"language-text\">y</code> 修饰符常见使用场景是将其用在字符串上并迭代贯穿所有匹配。新API <code class=\"language-text\">String.prototype.matchAll</code> 让这比以往任何时候都更容易，特别是对于具有捕获组的正则表达式：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> string <span class=\"token operator\">=</span> <span class=\"token string\">'Favorite GitHub repos: tc39/ecma262 v8/v8.dev'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> regex <span class=\"token operator\">=</span> <span class=\"token regex\">/\\b(?&lt;owner>[a-z0-9]+)\\/(?&lt;repo>[a-z0-9\\.]+)\\b/g</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> match <span class=\"token keyword\">of</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">.</span>index<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> with '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">.</span>input<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`→ owner: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">.</span>groups<span class=\"token punctuation\">.</span>owner<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`→ repo: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>match<span class=\"token punctuation\">.</span>groups<span class=\"token punctuation\">.</span>repo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Output:</span>\n<span class=\"token comment\">//</span>\n<span class=\"token comment\">// tc39/ecma262 at 23 with 'Favorite GitHub repos: tc39/ecma262 v8/v8.dev'</span>\n<span class=\"token comment\">// → owner: tc39</span>\n<span class=\"token comment\">// → repo: ecma262</span>\n<span class=\"token comment\">// v8/v8.dev at 36 with 'Favorite GitHub repos: tc39/ecma262 v8/v8.dev'</span>\n<span class=\"token comment\">// → owner: v8</span>\n<span class=\"token comment\">// → repo: v8.dev</span></code></pre></div>\n<p>有关更多详细信息，请阅读<a href=\"https://developers.google.com/web/updates/2019/02/string-matchall\">有关 String.prototype.matchAll 的 Web 基础知识文章</a>。</p>\n<h4><code class=\"language-text\">Atomics.notify</code></h4>\n<p><code class=\"language-text\">Atomics.wake</code> 改名为 <code class=\"language-text\">Atomics.notify</code>，与<a href=\"https://github.com/tc39/ecma262/pull/1220\">最近的规范更改</a>相匹配。</p>\n<h3>V8 API</h3>\n<p>请使用 <code class=\"language-text\">git log branch-heads/7.2..branch-heads/7.3 include/v8.h</code> 获取API更改列表。</p>\n<p>开发者可以使用 <code class=\"language-text\">git checkout -b 7.3 -t branch-heads/7.3</code> 体验 V8 的 v7.3中的新特性。或者，您可以<a href=\"https://www.google.com/chrome/browser/beta.html\">订阅 Chrome 的 Beta 频道</a>，并尽快尝试新功能。</p>\n<p>原文地址：<a href=\"https://v8.dev/blog/v8-release-73?from=groupmessage&#x26;isappinstalled=0\">https://v8.dev/blog/v8-release-73?from=groupmessage&#x26;isappinstalled=0</a></p>","frontmatter":{"title":"「译」V8 release v7.3","date":"2019年02月16日, ","description":"每6个星期创建一个新的分支作为 V8 发布过程的一部分。每个版本都是在 Chrome Beta 里程碑之前基于 v8 的 git master 分支。2月7日发布了新版本--v7.3，该版本在几周内与 Chrome 73 Stable 协同发布之前一直处于测试阶段。V8的v7.3充满了各种面向开发人员的好东西。这篇文章提供了一些亮点的预览"}}},"pageContext":{"slug":"/2019-02-16---V8-release-v7.3/","previous":{"fields":{"slug":"/2019-02-12---a-beginner-guide-to-graphQL/"},"frontmatter":{"title":"「译」GraphQL入门指南"}},"next":{"fields":{"slug":"/2019-02-10---Handling-data-fetching-with-state-machines/"},"frontmatter":{"title":"「译」使用状态机管理获取的数据"}}}}